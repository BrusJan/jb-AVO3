#  Template Deploy

#  This template allows you to deploy your app to an AWS S3 bucket.
#  The workflow allows running tests, code linting and security scans on feature branches (as well as master).
#  The app will be validated, deployed to S3 and trigger after the code is merged to master.

# Prerequisites: $AWS_ACCESS_KEY_ID, $AWS_SECRET_ACCESS_KEY, $AWS_DEFAULT_REGION setup in the Deployment variables.
# For advanced cases, please, follow examples from the pipe's:
# README https://bitbucket.org/atlassian/aws-s3-deploy/src/master/README.md

image: node:16

# Workflow Configuration

pipelines:
  default:
    - parallel:
      - step:
          name: Build and Test
          caches:
            - node
          script:
            - npm install
            # CI=true in default variables for Bitbucket Pipelines https://support.atlassian.com/bitbucket-cloud/docs/variables-in-pipelines/
            # - npm test
      - step:
          name: Lint App
          script:
            # Run your linter of choice here
            - echo 'run the linter'
            #- npm install eslint
            #- npx eslint src
          caches:
            - node
  branches:
    master:
      - parallel:
        - step:
            name: Build & Test
            caches:
              - node
            script:
              - npm install
              # CI=true in default variables for Bitbucket Pipelines https://support.atlassian.com/bitbucket-cloud/docs/variables-in-pipelines/
              - # npm test
              - npm run build
            artifacts:
              - dist/apps/**
        - step:
            name: Security Scan
            script:
              # Run your security scan of entire application
              - echo 'Security scan all resources'
        - step:
            name: Deploy Feature
            deployment: development
            clone:
              enabled: false
            script:
              # sync your files to S3 temp bucket
              - pipe: atlassian/aws-s3-deploy:1.1.0
                variables:
                  AWS_ACCESS_KEY_ID: $AWS_ACCESS_KEY_ID
                  AWS_SECRET_ACCESS_KEY: $AWS_SECRET_ACCESS_KEY
                  AWS_DEFAULT_REGION: $AWS_DEFAULT_REGION
                  S3_BUCKET: 'avo3stack-frontendbucketbd2f2980-171k0e91gl27y'
                  LOCAL_PATH: 'dist'
        - step:
            name: Deploy Stage
            deployment: stage
            clone:
              enabled: false
            script:
              # sync your files to S3
              - pipe: atlassian/aws-s3-deploy:1.1.0
                variables:
                    AWS_ACCESS_KEY_ID: $AWS_ACCESS_KEY_ID
                    AWS_SECRET_ACCESS_KEY: $AWS_SECRET_ACCESS_KEY
                    AWS_DEFAULT_REGION: $AWS_DEFAULT_REGION
                    S3_BUCKET: 'avo3stack-frontendbucketbd2f2980-171k0e91gl27y'
                    LOCAL_PATH: 'dist'
        - step:
            name: Deploy Production
            deployment: production
            trigger: manual
            clone:
              enabled: false
            script:
              # sync your files to S3
              - pipe: atlassian/aws-s3-deploy:1.1.0
                variables:
                  AWS_ACCESS_KEY_ID: $AWS_ACCESS_KEY_ID
                  AWS_SECRET_ACCESS_KEY: $AWS_SECRET_ACCESS_KEY
                  AWS_DEFAULT_REGION: $AWS_DEFAULT_REGION
                  S3_BUCKET: 'avo3stack-frontendbucketbd2f2980-171k0e91gl27y'
                  LOCAL_PATH: 'dist'
        - step:
            name: Generate Report & Email Stakeholders
              # After successful build and production deployment send email and report
            script:
              # sync your files to S3
              - echo 'Email & Report Generated'